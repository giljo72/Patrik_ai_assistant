name: Sync to Google Drive

on:
  push:
    branches:
      - main  # or your default branch
  workflow_dispatch:  # Allows manual triggering

jobs:
  upload-to-drive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # This step installs the Google Drive CLI tool
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1  # Updated to v1
        with:
          service_account_key: ${{ secrets.DRIVE_CREDENTIALS }}
          export_default_credentials: true
      
      # Install Google Drive CLI
      - name: Install Drive CLI
        run: |
          pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
      
      # Upload files individually
      - name: Upload files to Google Drive
        run: |
          # Create a Python script to upload files
          cat > upload_to_drive.py << 'EOF'
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload
          import os
          import mimetypes
          import google.auth
          
          # Authenticate with service account
          credentials, project = google.auth.default()
          service = build('drive', 'v3', credentials=credentials)
          
          # Folder ID from repository secrets
          folder_id = '${{ secrets.DRIVE_FOLDER_ID }}'
          
          # Function to upload a file
          def upload_file(file_path, parent_id):
              file_name = os.path.basename(file_path)
              
              # Check if file exists in the Drive folder
              query = f"name = '{file_name}' and '{parent_id}' in parents and trashed = false"
              results = service.files().list(q=query, fields="files(id, name)").execute()
              files = results.get('files', [])
